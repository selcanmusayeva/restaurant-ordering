spring.application.name=restaurant-ordering

# Server Configuration
server.port=8080

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5433/restaurant_ordering
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JWT Configuration
jwt.secret=321727ee57f7e4e9bf217c05f3804f7f51b2f80185534980049be102fd279048a1130ab78d1b72eafe1ae281eebc7123620e89e81d3976b0659d6e624a4f5387e77da4beb83dcf1961cb0176dd97932a73ce294ca0b1ec1b431c53344a724a78db8072dfee0b5ce1a238e5786433210700403262a31bdebef56bc37366426488
jwt.expiration=86400

# RabbitMQ Configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# Redis Configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379

# Logging Configuration
logging.level.org.springframework.security=DEBUG
logging.level.com.ordering.restaurant=DEBUG

# Error Logging
logging.level.org.springframework.web=DEBUG
logging.level.org.springdoc=DEBUG

# SpringDoc/Swagger Configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.pathsToMatch=/api/v1/**,/test