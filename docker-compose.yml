version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: restaurant-ordering-app
    depends_on:
      - postgres
      - redis
      - rabbitmq
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/restaurant_ordering
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
    restart: unless-stopped
    networks:
      - restaurant-network

  postgres:
    image: postgres:16-alpine
    container_name: restaurant-ordering-postgres
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=restaurant_ordering
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - restaurant-network

  redis:
    image: redis:7-alpine
    container_name: restaurant-ordering-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - restaurant-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: restaurant-ordering-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    restart: unless-stopped
    networks:
      - restaurant-network

networks:
  restaurant-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  rabbitmq-data: 